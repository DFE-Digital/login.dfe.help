name: $(BuildDefinitionName)_tag-$(BuildID)_at-$(Date:yyyyMMdd)$(Rev:.r)
resources:
  repositories:
  # Defult branch is master
    - repository: devopsTemplates
      type: github
      endpoint: DfE-Digital
      name: DFE-Digital/login.dfe.devops
      ref: feature/DSI-5540
    - repository: config
      type: github
      endpoint: DfE-Digital
      name: DFE-Digital/login.dfe.config
      ref: master

trigger:
  branches:
    include:
    - master
    - develop
    - release/*
    #- feature/*

variables:
- group: dsi-dev-kv
- group: dsi-global
- name: applicationShortName
  value: 'hlp'
- name: applicationFullName
  value: 'help'
- name: numberOfWorkers
  value: 1
- name: environmentName
  value: dev
# - name: environmentName
#   - ${{ if eq(parameters.gitVersioning, true) }}:
#     value: 

stages:

# Code Scans & Build the artifact for deployment
- stage: buildApp
  displayName: "Package application"
  condition: and(succeeded(), eq(variables['AppDeploy'], 'true'))
  jobs:
    # Code scaning tools
  - template:  pipeline/Checkov-ESlint.yml@devopsTemplates

  - template:  pipeline/DependencyCheck.yml@devopsTemplates
    parameters:
      npmInstCmd: 'install --force --json --no-package-lock'

  - template: pipeline/build.yml@devopsTemplates
    parameters:
      applicationName: ${{variables.applicationFullName}}
      custRegAuth: $(custRegAuth)
      artifactName: "${{variables.applicationShortName}}-dev-$(Build.BuildId)-release"
      environmentName: dev
      environmentId: d01
      pm2ProcessFileName: process.json
      nodeVersionSpec: '14.18.1'
      npmInstCmd: 'install --force --json --no-package-lock'
      npmPruneFixCmd: 'install --production --json --force --no-package-lock'

- stage: Deployment_${{variables.environmentName}}
  displayName: "Deploy Infrastructure"
  dependsOn: 
  - buildApp
  condition: and(in(dependencies.buildApp.result, 'Succeeded', 'Skipped'), eq(variables['InfrDeploy'], 'true'))
  jobs:
  - template: pipeline/infrastructure.yml@devopsTemplates
    parameters:
      serviceConnection: $(devServiceConnection)
      environmentName: dev
      environmentId: d01
      subscriptionId: $(devSubscriptionId)
      applicationShortName: ${{variables.applicationShortName}}
      applicationFullName: ${{variables.applicationFullName}}
      releaseArtifactName: ${{variables.applicationShortName}}-dev-$(Build.BuildId)-release
      certificateName: non-prod-gateway
  
  - ${{ if ne(variables['InfrDeploy'], 'true') }}:

    - template: pipeline/deploy.yml@devopsTemplates
      parameters:
        serviceConnection: $(devServiceConnection)
        environmentName: dev
        environmentId: d01
        subscriptionId: $(devSubscriptionId)
        applicationFullName: ${{variables.applicationFullName}}
        applicationShortName: ${{variables.applicationShortName}}
        releaseArtifactName: ${{variables.applicationShortName}}-dev-$(Build.BuildId)-release
 