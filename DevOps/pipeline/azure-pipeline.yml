name: $(BuildDefinitionName)_tag-$(BuildID)_at-$(Date:yyyyMMdd)$(Rev:.r)
resources:
  repositories:
    - repository: devopsTemplates
      type: github
      endpoint: DfE-Digital
      name: DFE-Digital/login.dfe.devops
    - repository: config
      type: github
      endpoint: DfE-Digital
      name: DFE-Digital/login.dfe.config
      ref: master

trigger:
  branches:
    include:
    - master
    - develop
    - release/*
    #- feature/*

variables:
- group: platform-global
- group: code-scan-tools
- name: applicationShortName
  value: 'hlp'
- name: applicationFullName
  value: 'help'
# - name: environmentName
#   - ${{ if eq(parameters.gitVersioning, true) }}:
#     value: 

stages:
# Check What Folder/files changes to trigger the correspondent stages
- stage: FilesChanges
  displayName: "Files Changes"
  jobs:
  - template: ./filesCheck.yml

# Code scaning tools 
#- template: ./scan-tools.yml

#Build the artifact for deployment
- stage: buildApp
  displayName: "Package application"
  condition: eq(dependencies.FilesChanges.outputs['filesChanges.filesChangesChecks.AppDeploy'], 'true')
  dependsOn: 
  #- scanTools
  - FilesChanges
  variables: 
    - name: AppDeploy
      value: $[ stageDependencies.FilesChanges.filesChanges.outputs['filesChangesChecks.AppDeploy'] ]
  jobs:
  - template: ./build.yml
    parameters:
      applicationName: ${{variables.applicationFullName}}
      custRegAuth: $(custRegAuth)
      artifactName: "${{variables.applicationShortName}}-dev-$(Build.BuildId)-release"
      environmentName: dev
      pm2ProcessFileName: process.json
      variableGroups:
        - platform-dev
        - platform-dev-secured
        - platform-standalone-custom-hosts

- stage: DeployApp
  dependsOn: 
  - buildApp
  - FilesChanges
  displayName: "Deploy application"
  condition: and(eq(dependencies.FilesChanges.outputs['filesChanges.filesChangesChecks.AppDeploy'], 'true'),eq(dependencies.FilesChanges.outputs['filesChanges.filesCheck.InfrDeploy'], ''))
  variables: 
    - name: AppDeploy
      value: $[ stageDependencies.FilesChanges.filesChanges.outputs['filesChangesChecks.AppDeploy'] ]
    - name: InfrDeploy
      value: $[ stageDependencies.FilesChanges.filesChanges.outputs['filesChangesChecks.InfrDeploy'] ]
  jobs:
  - template: ./deploy.yml
    parameters:
      serviceConnection: "$(devServiceConnection)"
      environmentName: dev
      environmentId: d01
      subscriptionId: $(devSubscriptionId)
      applicationFullName: ${{variables.applicationFullName}}
      applicationShortName: ${{variables.applicationShortName}}
      releaseArtifactName: ${{variables.applicationShortName}}-dev-$(Build.BuildId)-release

- stage: DeployInfr
  displayName: "Deploy Infrastructure"
  dependsOn: FilesChanges
  condition: eq(dependencies.FilesChanges.outputs['filesChanges.filesChangesChecks.InfrDeploy'], 'true')
  variables: 
    - name: InfrDeploy
      value: $[ stageDependencies.FilesChanges.filesChanges.outputs['filesChangesChecks.InfrDeploy'] ]
    - name: AppDeploy
      value: $[ stageDependencies.FilesChanges.filesChanges.outputs['filesChangesChecks.AppDeploy'] ]
  jobs:
  - template: ./infrastructure.yml
    parameters:
      serviceConnection: "$(devServiceConnection)"
      environmentName: dev
      environmentId: d01
      subscriptionId: $(devSubscriptionId)
      applicationShortName: ${{variables.applicationShortName}}
      applicationFullName: ${{variables.applicationFullName}}
      releaseArtifactName: ${{variables.applicationShortName}}-dev-$(Build.BuildId)-release
      certificateName: non-prod-gateway
      variableGroups:
        - platform-dev
        - platform-dev-secured
        - platform-standalone-custom-hosts
