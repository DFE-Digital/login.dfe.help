name: $(BuildDefinitionName)_tag-$(BuildID)_at-$(Date:yyyyMMdd)$(Rev:.r)
resources:
  repositories:
  # Defult branch is master
    - repository: devopsTemplates
      type: github
      endpoint: DfE-Digital
      name: DFE-Digital/login.dfe.devops
      ref: feature/DSI-5540
    - repository: config
      type: github
      endpoint: DfE-Digital
      name: DFE-Digital/login.dfe.config
      ref: master

trigger:
  branches:
    include:
    - master
    - develop
    - release/*
    #- feature/*

parameters:
- name: AppDeploy
  type: boolean
  default: true
- name: InfrDeploy
  type: boolean
  default: true
- name: dev
  type: boolean
  default: true
- name: test
  type: boolean
  default: false
- name: int
  type: boolean
  default: false
- name: pp
  type: boolean
  default: false
- name: pr
  type: boolean
  default: false

variables:
- group: dsi-global
- name: applicationShortName
  value: 'hlp'
- name: applicationFullName
  value: 'help'
- name: numberOfWorkers
  value: 1 

stages:

# Code Scans & Build the artifact for deployment
- stage: scanBuildApp
  displayName: "Scan tools & Build"
  jobs:
    # Code scaning tools
  - ${{ if eq(parameters.InfrDeploy, 'true') }}:
    - template:  pipeline/checkov.yml@devopsTemplates

  - ${{ if eq(parameters.AppDeploy, 'true') }}:
    - template:  pipeline/checkov.yml@devopsTemplates

    - template:  pipeline/eslint.yml@devopsTemplates

    - template:  pipeline/dependencyCheck.yml@devopsTemplates
      parameters:
        npmInstCmd: 'install --force --json --no-package-lock'

    - template: pipeline/build.yml@devopsTemplates
      parameters:
        applicationName: ${{variables.applicationFullName}}
        custRegAuth: $(custRegAuth)
        environmentNames: 
          ${{ if parameters.dev }}:
            - dev
          ${{ if parameters.test }}:
            - test
          ${{ if parameters.int }}:
            - int
          ${{ if parameters.pp }}:
            - pp
          ${{ if parameters.pr }}:
            - pr
        pm2ProcessFileName: process.json
        nodeVersionSpec: '14.18.1'
        npmInstCmd: 'install --force --json --no-package-lock'
        npmPruneFixCmd: 'install --production --json --force --no-package-lock'


- ${{ each parameter in parameters }}:
  - ${{ if not(in(parameter.Key, 'AppDeploy', 'InfrDeploy')) }}:
    - ${{ if eq(parameter.value, 'true') }}:
      - stage: Deployment_${{parameter.Key}}
        displayName: "Deployment [${{parameter.Key}}]"
        dependsOn: 
        - scanBuildApp
        condition: in(dependencies.scanBuildApp.result, 'Succeeded', 'Skipped')
        variables:
        - group: dsi-${{parameter.key}}-kv
        jobs:
        - ${{ if parameters.InfrDeploy }}:
          - template: pipeline/infrastructure.yml@devopsTemplates
            parameters:
              ${{ if eq(parameter.key, 'dev') }}:
                serviceConnection: $(devServiceConnection)
              ${{ elseif eq(parameter.key, 'pr') }}:
                serviceConnection: $(prodServiceConnection)
              ${{ else }}:
                serviceConnection: $(testServiceConnection)
              environmentName: ${{parameter.key}}
              applicationShortName: ${{variables.applicationShortName}}
              applicationFullName: ${{variables.applicationFullName}}
              releaseArtifactName: ${{variables.applicationFullName}}-${{parameter.key}}-$(Build.BuildId)-release
              certificateName: non-prod-gateway
              AppDeploy: ${{parameters.AppDeploy}}

        - ${{ if parameters.AppDeploy }}:
          - template: pipeline/deploy.yml@devopsTemplates
            parameters: 
              ${{ if eq(parameter.key, 'dev') }}:
                serviceConnection: $(devServiceConnection)
              ${{ elseif eq(parameter.key, 'pr') }}:
                serviceConnection: $(prodServiceConnection)
              ${{ else }}:
                serviceConnection: $(testServiceConnection)
              environmentName: ${{parameter.key}}
              applicationFullName: ${{variables.applicationFullName}}
              applicationShortName: ${{variables.applicationShortName}}
              releaseArtifactName: ${{variables.applicationFullName}}-${{parameter.key}}-$(Build.BuildId)-release
              InfrDeploy: ${{parameters.InfrDeploy}}
    