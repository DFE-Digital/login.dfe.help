name: $(BuildDefinitionName)_tag-$(BuildID)_at-$(Date:yyyyMMdd)$(Rev:.r)
resources:
  repositories:
  # Defult branch is master
    - repository: devopsTemplates
      type: github
      endpoint: DfE-Digital
      name: DFE-Digital/login.dfe.devops
      ref: feature/DSI-5540
    - repository: config
      type: github
      endpoint: DfE-Digital
      name: DFE-Digital/login.dfe.config
      ref: master

trigger:
  branches:
    include:
    - release/*
    - feature/*

pr:
  branches:
    include:
    - main
    - develop

parameters:
- name: AppDeploy
  type: boolean
  displayName: 'App Deployment only'
  default: true
- name: InfrDeploy
  type: boolean
  displayName: 'Infrastrucure Deployment only'
  default: true
- name: dev
  type: boolean
  displayName: 'Dev Deployment'
  default: false
- name: test
  type: boolean
  displayName: 'Test Deployment'
  default: false
- name: int
  type: boolean
  displayName: 'INT Deployment'
  default: false
- name: pp
  type: boolean
  displayName: 'Pre-Prod Deployment'
  default: false
- name: pr
  type: boolean
  displayName: 'Prod Deployment'
  default: false

variables:
- group: dsi-global
- name: applicationShortName
  value: 'hlp'
- name: applicationFullName
  value: 'help'
- name: numberOfWorkers
  value: 1
- name: dev
  ${{ if or(eq(parameters.dev, 'true'), containsValue(variables['Build.SourceBranch'],'feature/') }}:
    value: true
  ${{ else }}:
    value: false
- name: test
  ${{ if or(eq(parameters.test, 'true'), containsValue(variables['Build.SourceBranch'],'feature/') }}:
    value: true
  ${{ else }}:
    value: false
- name: int
  ${{ if or(eq(parameters.int, 'true'), containsValue(variables['Build.SourceBranch'],'release/') }}:
    value: true
  ${{ else }}:
    value: false
- name: pp
  ${{ if or(eq(parameters.pp, 'true'), containsValue(variables['Build.SourceBranch'],'release/') }}:
    value: true
  ${{ else }}:
    value: false
- name: pr
  ${{ if or(eq(parameters.pr, 'true'), containsValue(variables['Build.SourceBranch'],'release/') }}:
    value: true
  ${{ else }}:
    value: false
- name: brch
  value: $(Build.SourceBranchName)

stages:

- stage:
  jobs:
  - job: TestVars
    steps:
    - ${{ each var in variables }}:
      - ${{ if le(length(var.key), 4) }}:
        - ${{ if eq(var.value, 'true') }}:

          - script: |
              echo ${{ var.key }}
              echo ${{ var.value }}
            displayName: ${{ var.key }}

# # Code Scans & Build the artifact for deployment
# - stage: scanBuildApp
#   displayName: "Scan tools & Build"
#   jobs:
#     # Code scaning tools
#   - ${{ if eq(parameters.InfrDeploy, 'true') }}:
#     - template:  pipeline/checkov.yml@devopsTemplates

#   - ${{ if eq(parameters.AppDeploy, 'true') }}:

#     - template:  pipeline/eslint.yml@devopsTemplates

#     - template:  pipeline/dependencyCheck.yml@devopsTemplates
#       parameters:
#         npmInstCmd: 'install --force --json --no-package-lock'

#     - template: pipeline/build.yml@devopsTemplates
#       parameters:
#         applicationName: ${{variables.applicationFullName}}
#         custRegAuth: $(custRegAuth)
#         environmentNames:
#           - ${{ if eq(parameters.dev, 'true') }}:
#             - dev
#           - ${{ if eq(parameters.test, 'true') }}:
#             - test
#           - ${{ if eq(parameters.int, 'true') }}:
#             - int
#           - ${{ if eq(parameters.pp, 'true') }}:
#             - pp
#           - ${{ if eq(parameters.pr, 'true') }}:
#             - pr
#         pm2ProcessFileName: process.json
#         nodeVersionSpec: '14.18.1'
#         npmInstCmd: 'install --force --json --no-package-lock'
#         npmPruneFixCmd: 'install --production --json --force --no-package-lock'


# - ${{ each parameter in parameters }}:
#   - ${{ if not(in(parameter.Key, 'AppDeploy', 'InfrDeploy')) }}:
#     - ${{ if eq(parameter.value, 'true') }}:
#       - stage: Deployment_${{parameter.Key}}
#         displayName: "Deployment [${{parameter.Key}}]"
#         dependsOn: 
#         - scanBuildApp
#         condition: in(dependencies.scanBuildApp.result, 'Succeeded', 'Skipped')
#         variables:
#         - group: dsi-${{parameter.key}}-kv
#         jobs:
#         - ${{ if parameters.InfrDeploy }}:
#           - template: pipeline/infrastructure.yml@devopsTemplates
#             parameters:
#               ${{ if eq(parameter.key, 'dev') }}:
#                 serviceConnection: $(devServiceConnection)
#               ${{ elseif eq(parameter.key, 'pr') }}:
#                 serviceConnection: $(prodServiceConnection)
#               ${{ else }}:
#                 serviceConnection: $(testServiceConnection)
#               environmentName: ${{parameter.key}}
#               applicationShortName: ${{variables.applicationShortName}}
#               applicationFullName: ${{variables.applicationFullName}}
#               releaseArtifactName: ${{variables.applicationFullName}}-${{parameter.key}}-$(Build.BuildId)-release
#               ${{ if eq(parameter.key, 'pr') }}:
#                 certificateName: signin-generic
#               ${{ else }}:
#                 certificateName: non-prod-gateway
#               AppDeploy: ${{parameters.AppDeploy}}

#         - ${{ if parameters.AppDeploy }}:
#           - template: pipeline/deploy.yml@devopsTemplates
#             parameters: 
#               ${{ if eq(parameter.key, 'dev') }}:
#                 serviceConnection: $(devServiceConnection)
#               ${{ elseif eq(parameter.key, 'pr') }}:
#                 serviceConnection: $(prodServiceConnection)
#               ${{ else }}:
#                 serviceConnection: $(testServiceConnection)
#               environmentName: ${{parameter.key}}
#               applicationFullName: ${{variables.applicationFullName}}
#               applicationShortName: ${{variables.applicationShortName}}
#               releaseArtifactName: ${{variables.applicationFullName}}-${{parameter.key}}-$(Build.BuildId)-release
#               InfrDeploy: ${{parameters.InfrDeploy}}
    