parameters:
  - name: devServiceConnection
    type: string
    default: S141D.bsvc.cip.azdo

stages:
- stage: scanTools
  displayName: Scan tools
  jobs:
  - job:
    steps:
    - task:  Bash@3
      displayName: Install Docker
      inputs:
        targetType: 'filePath'
        filePath: "$(System.DefaultWorkingDirectory)/DevOps/scripts/setup.sh"
        workingDirectory: "$(System.DefaultWorkingDirectory)"
    - task: AzureCLI@2
      displayName: 'Pull scan tools images'
      inputs:
        azureSubscription: "${{parameters.devServiceConnection}}"
        scriptType: pscore
        scriptLocation: inlineScript
        inlineScript: |
          az acr login --name $(registry)
          docker pull $(server)/dependency-check
          docker pull $(server)/eslint
          docker pull $(server)/checkov
    - task:  Bash@3
      displayName: 'Scan with Checkov'
      inputs:
        targetType: 'inline'
        script: |
          mkdir checkov
          docker run --rm -v $(pwd):/arm:ro $(server)/checkov > checkov/checkov-results.xml
          echo "checkov Complete"
    - task: PublishTestResults@2
      displayName: 'Publish Test Results Checkov'
      inputs:
        testResultsFiles: 'checkov/checkov-results.xml'
        mergeTestResults: true
        testRunTitle: Checkov
    - task:  Bash@3
      displayName: Scan with ESLint'
      inputs:
        targetType: 'inline'
        script: |
          mkdir eslint
          docker run --rm -v $(pwd)/src:/src:ro -v $(pwd)/eslint:/reports $(server)/eslint
          echo "ESLint Complete"
    - task: PublishTestResults@2
      displayName: 'Publish Test Results ESLint'
      inputs:
        testResultsFiles: 'eslint/eslint-results.xml'
        mergeTestResults: true
        testRunTitle: ESLint
    - task:  Bash@3
      displayName: 'Scan with Dependency Check'
      inputs:
        targetType: 'inline'
        script: |
          mkdir OWASP-Dependency-Check
          mkdir OWASP-Dependency-Check/data
          mkdir OWASP-Dependency-Check/data/cache
          mkdir OWASP-Dependency-Check/reports

          docker run --rm \
          -e user=$USER \
          -u $(id -u ${USER}):$(id -g ${USER}) \
          -v $(pwd):/src:ro \
          -v $(pwd)/OWASP-Dependency-Check/data:/usr/share/dependency-check/data \
          -v $(pwd)/OWASP-Dependency-Check/reports:/report \
          $(server)/dependency-check \
          --scan /src \
          --format "ALL" \
          --project "dependency-check scan:$(Build.DefinitionName)" \
          --out /report
    - task: PublishTestResults@2
      displayName: 'Publish Test Results Dependency Check'
      inputs:
        testResultsFiles: 'OWASP-Dependency-Check/reports/dependency-check-junit.xml'
        mergeTestResults: true
        testRunTitle: 'Dependency Check'
    # - task: ShanmugaSubramanianLennox.PublishHTMLReports.publishhtmlreport.publishhtmlreport@1
    #   displayName: 'Dependency Check'
    #   inputs:
    #     htmlPath: '$(System.DefaultWorkingDirectory)/OWASP-Dependency-Check/reports/dependency-check-report.html'
    - task:  Bash@3
      displayName: 'Delete the scan tool Folders'
      inputs:
        targetType: 'inline'
        script: |
          sudo rm -rf OWASP-Dependency-Check
          sudo rm -rf checkov
          sudo rm -rf eslint
          echo "Folder Deleted"